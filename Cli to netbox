To fetch details of a connected Nexus switch from another Nexus switch using NetBox, you typically follow these steps:

1. **Ensure NetBox API Access**: Verify you have access to the NetBox API and the required permissions.

2. **Identify Target Device**: Determine the device you want to query and its identifier in NetBox.

3. **Install Required Libraries**: Ensure you have Python and necessary libraries like `requests` installed.

4. **Write a Python Script**: Use a Python script to interact with the NetBox API and fetch details.

Here's a basic example:

### Step 1: Set Up Environment

Install the `requests` library if you haven't:

```sh
pip install requests
```

### Step 2: Python Script

```python
import requests

# Define NetBox API URL and token
netbox_url = 'http://your-netbox-url/api/'
token = 'your-api-token'
headers = {
    'Authorization': f'Token {token}',
    'Content-Type': 'application/json',
    'Accept': 'application/json'
}

# Function to fetch device details
def get_device_details(device_name):
    response = requests.get(f'{netbox_url}dcim/devices/?name={device_name}', headers=headers)
    if response.status_code == 200:
        devices = response.json()
        if devices['results']:
            return devices['results'][0]
        else:
            print(f"Device {device_name} not found.")
            return None
    else:
        print(f"Failed to fetch device details. Status code: {response.status_code}")
        return None

# Function to fetch connected interfaces
def get_connected_interfaces(device_id):
    response = requests.get(f'{netbox_url}dcim/interfaces/?device_id={device_id}', headers=headers)
    if response.status_code == 200:
        interfaces = response.json()['results']
        connected_interfaces = []
        for interface in interfaces:
            if interface['connected_endpoint']:
                connected_interfaces.append(interface)
        return connected_interfaces
    else:
        print(f"Failed to fetch interfaces. Status code: {response.status_code}")
        return []

# Example usage
device_name = 'Your-Nexus-Switch-Name'
device_details = get_device_details(device_name)
if device_details:
    print(f"Device details: {device_details}")
    connected_interfaces = get_connected_interfaces(device_details['id'])
    print(f"Connected interfaces: {connected_interfaces}")
```

### Step 3: Run the Script

Save the script and run it. It will fetch the details of the specified Nexus switch and print out its connected interfaces.

### Explanation

- **API URL and Token**: Replace `your-netbox-url` with your NetBox instance URL and `your-api-token` with your NetBox API token.
- **`get_device_details` Function**: Fetches device details from NetBox by name.
- **`get_connected_interfaces` Function**: Fetches interfaces of the device and filters those which are connected to another endpoint.
- **Example Usage**: Replace `'Your-Nexus-Switch-Name'` with the name of your Nexus switch.

This script provides a basic framework. Depending on your specific requirements and NetBox configuration, you might need to adjust the API endpoints or add additional error handling.
