import paramiko
import pynetbox

# Router connection details
router_ip = "10.133.35.147"
username = "admin"
password = "tcs123"

# NetBox API connection details
NETBOX_URL = "http://10.133.35.148:8000"  # Ensure this is correct
NETBOX_TOKEN = "your-netbox-api-token"    # Replace with your actual NetBox API token
nb = pynetbox.api(NETBOX_URL, token=NETBOX_TOKEN)

# Power feed name in NetBox that you want to update
power_feed_name = "POWER1"  # Replace with the actual name of the power feed

# Initialize SSH client
ssh_client = paramiko.SSHClient()
ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

try:
    # Connect to the router using SSH
    ssh_client.connect(router_ip, username=username, password=password)

    # Execute the command to get power details
    stdin, stdout, stderr = ssh_client.exec_command("show environment power")
    output = stdout.read().decode()

    # Process the output to extract relevant power details
    power_details = {}
    lines = output.splitlines()
    for line in lines:
        if "Total Power Output (actual draw)" in line:
            power_details['output'] = line.split(":")[-1].strip().split()[0]  # Extract the value
        elif "Total Power Input (actual draw)" in line:
            power_details['input'] = line.split(":")[-1].strip().split()[0]   # Extract the value
        elif "Voltage" in line:
            power_details['voltage'] = line.split(":")[-1].strip().split()[0] # Extract the voltage

    # Close the SSH connection
    ssh_client.close()

    # Retrieve the power feed in NetBox
    power_feed = nb.dcim.power_feeds.get(name=power_feed_name)

    if power_feed:
        # Update the power feed with the new details
        power_feed.update({
            "allocated_draw": power_details.get('output', 0),  # Actual power draw in Watts
            "maximum_draw": power_details.get('input', 0),     # Maximum input in Watts
            "voltage": power_details.get('voltage', 0),        # Voltage in Volts
        })
        print(f"Updated power feed {power_feed_name} in NetBox.")
    else:
        print(f"Power feed {power_feed_name} not found in NetBox.")

except Exception as e:
    print(f"An error occurred: {e}")
finally:
    # Ensure the SSH client is properly closed
    ssh_client.close()
